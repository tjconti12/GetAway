{"version":3,"sources":["SVGs/food-icon.svg","SVGs/TriangleLogo.svg","SVGs/eventLogo.svg","Components/SearchMarkers/SearchMarkers.js","Components/Popup/PopupComponent.js","Components/Map/Map.js","Components/SearchBar/SearchBar.js","Components/Navbar/Navbar.js","Components/CustomSearch/CustomSearch.js","Components/Modal/ModalElement.js","SVGs/TitleLogo.svg","SVGs/Food-icon-start.svg","SVGs/Explore-icon-start.svg","SVGs/Event-icon-start.svg","Components/Modal/IntroModal.js","Components/Modal/LocationModal.js","Components/CustomResults/CustomResults.js","App.js","reportWebVitals.js","index.js"],"names":["SearchMarkers","searchData","setSelected","searchType","searchCategory","introModalOpen","locationModalOpen","location","useLocation","pathname","undefined","className","type","color","height","width","total","events","map","event","latitude","longitude","onClick","src","eventLogo","alt","businesses","business","i","coordinates","foodLogo","exploreLogo","id","PopupComponent","selected","setResultData","handleMapDetailClick","onClose","name","description","time_start","time_end","image_url","closeOnClick","categories","element","title","geolocateControlStyle","right","bottom","Map","viewport","setViewport","mapRef","children","useState","mapStyle","ref","mapboxApiAccessToken","process","onViewportChange","style","SearchBar","setSearchViewport","containerRef","closeLocationModal","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","handleSearchViewport","transitionDuration","useEffect","onResult","onError","error","console","log","Navbar","setIntroModalOpen","to","exact","activeClassName","CustomSearch","handleSubmit","handleCityChange","handleTermChange","handleNumOfResultsChange","class","onSubmit","htmlFor","placeholder","onChange","value","customStyles","content","top","left","marginRight","transform","backgroundColor","textAlign","Modal","setAppElement","ModalElement","isOpen","close","contentLabel","IntroModal","openLocationModal","setSearchCategory","setSearchType","titleLogo","LocationModal","getUserLocation","CustomResults","resultData","setSearchData","length","result","is_closed","address1","city","state","zip_code","href","url","App","zoom","searchViewport","userPosition","setUserPosition","setLocationModalOpen","history","useHistory","setCity","searchTerm","setsearchTerm","numOfResults","setNumOfResults","customSearchParams","getCustomSearch","a","fetch","response","json","data","push","useRef","setUserLocation","pos","crd","coords","searchParams","getDetailsByLocation","param","path","navigator","geolocation","getCurrentPosition","preventDefault","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fef8a7fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/food-icon.4148b5d3.svg\";","export default __webpack_public_path__ + \"static/media/TriangleLogo.d264e9ed.svg\";","export default __webpack_public_path__ + \"static/media/eventLogo.97c0ca4f.svg\";","import { useLocation } from 'react-router-dom';\nimport {Marker} from 'react-map-gl';\nimport Loader from \"react-loader-spinner\";\nimport './SearchMarkers.css';\nimport foodLogo from '../../SVGs/food-icon.svg';\nimport exploreLogo from '../../SVGs/TriangleLogo.svg';\nimport eventLogo from '../../SVGs/eventLogo.svg';\n\nconst SearchMarkers = ({ searchData, setSelected, searchType, searchCategory, introModalOpen, locationModalOpen }) => {\n  const location = useLocation();\n   \n  if (introModalOpen || locationModalOpen || location.pathname === \"/Map\") {\n      return null;\n    }\n    if (searchData === {} || searchData === null || searchData === undefined) {\n        return (\n          <div className=\"loader\">\n            <h1>Loading...</h1>\n            <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n          </div>\n        )\n         \n    } else if (searchData.total === 0) {\n      return <h1>No Results Found</h1>\n    } else if (searchType === 'events?') {\n      return (\n        <div>\n          {searchData.events.map((event) => {\n              return (\n              <Marker latitude={event.latitude} longitude={event.longitude}>\n                <button className=\"marker-btn\" onClick={() => {\n                  setSelected(event)\n                }}>\n                  <img src={eventLogo} alt=\"Event Icon\" />\n                </button>\n              </Marker>\n            )\n          })}\n        </div>\n      )\n    }\n    \n    return (\n        <div>\n            {searchData.businesses.map((business, i) => {\n        return (\n          <Marker key={business.id} latitude={business.coordinates.latitude} longitude={business.coordinates.longitude}>\n            <button className=\"marker-btn\" onClick={() => {\n              setSelected(business)\n            }}>\n              {searchCategory === 'food' ? <img src={foodLogo} alt=\"restaurant Icon\" /> : <img src={exploreLogo} alt=\"Explore Result Icon\" />}\n              \n              \n            </button>\n          </Marker>\n        )\n      })}\n        </div>\n    )\n}\n\nexport default SearchMarkers\n","import {Popup} from 'react-map-gl';\nimport './Popup.css';\n\nconst PopupComponent = ({ selected, setSelected, searchType, setResultData, handleMapDetailClick }) => {\n    \n    \n    if(!selected) {\n        return null;\n    }\n    if (searchType === 'events?') {\n        return (\n            <div>\n                <Popup latitude={selected.latitude} longitude={selected.longitude} onClose={() => {\n                    setSelected(null);\n                }} >\n                    <h2>{selected.name}</h2>\n                    <h3>{selected.description}</h3>\n                    <h3>{selected.time_start}</h3>\n                    <h3>{selected.time_end}</h3>\n                    <img className=\"popup-img\" src={selected.image_url} alt={selected.id} />\n                </Popup>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <Popup latitude={selected.coordinates.latitude} longitude={selected.coordinates.longitude} closeOnClick={false} onClose={() => {\n                setSelected(null);\n            }}>\n                <div className=\"popup\">\n                    <h2 className=\"popup-name\">{selected.name}</h2>\n                    <div className=\"popup-img-container\">\n                        <img className=\"popup-img\" src={selected.image_url} alt={selected.id} />\n                    </div>\n                    <h3 className=\"popup-type\">Type: {}\n                        {selected.categories.map((element) => {\n                            return (<span>{element.title}, </span>)\n                        })}\n                    </h3>\n                    <button className=\"popup-moreInfo-btn\" onClick={() => {\n                        setResultData({businesses: [selected]});\n                        handleMapDetailClick();\n                    }}>See More Info</button>\n                </div>\n            </Popup>\n        </div>\n    )\n}\n\nexport default PopupComponent\n","import { useState} from 'react';\nimport ReactMapGL, {GeolocateControl} from 'react-map-gl';\nimport SearchMarkers from '../SearchMarkers/SearchMarkers';\nimport PopupComponent from '../Popup/PopupComponent';\n\n\nconst geolocateControlStyle= {\n    right: 10,\n    bottom: 25\n}\n\nconst Map = ({ searchData, viewport, setViewport, mapRef, children, searchType, searchCategory, introModalOpen, locationModalOpen, setResultData, handleMapDetailClick }) => {\n    \n\n    const [selected, setSelected] = useState(null);\n\n\n    \n\n    return (\n        <div>\n            <ReactMapGL \n            mapStyle=\"mapbox://styles/mapbox/outdoors-v11\"\n            {...viewport}\n            height=\"90vh\"\n            width=\"100vw\"\n            ref={mapRef}\n            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_KEY}\n            onViewportChange={(viewport) => {\n            setViewport(viewport);\n            }} >\n            \n            <GeolocateControl style={geolocateControlStyle}  />    \n            \n            <SearchMarkers searchData={searchData} setSelected={setSelected} searchType={searchType} searchCategory={searchCategory} introModalOpen={introModalOpen} locationModalOpen={locationModalOpen}></SearchMarkers>\n            <PopupComponent selected={selected} setSelected={setSelected} searchType={searchType} setResultData={setResultData} handleMapDetailClick={handleMapDetailClick}></PopupComponent>\n            {children}\n            </ReactMapGL>\n        </div>\n        \n        \n    )\n}\n\nexport default Map","import Geocoder from 'react-map-gl-geocoder';\nimport {useCallback, useEffect} from 'react';\n\n\nconst SearchBar = ({ setViewport, viewport, setSearchViewport, mapRef, containerRef, closeLocationModal, introModalOpen }) => {\n\n    const handleSearchViewport = (newViewport) => {\n        setSearchViewport(newViewport);\n    }\n\n    const handleViewportChange = useCallback(\n        (newViewport) => {\n            setViewport(newViewport);\n        },\n        []\n      );\n    \n    const handleGeocoderViewportChange = useCallback(\n        (newViewport) => {\n            handleSearchViewport(newViewport);\n            const geocoderDefaultOverrides = { transitionDuration: 1000 };\n          \n    \n          return handleViewportChange({\n            ...newViewport,\n            ...geocoderDefaultOverrides,\n          });\n        },\n        [handleViewportChange]\n      );\n\n\n    useEffect(() => {\n        handleGeocoderViewportChange();\n    }, [])\n\n    if(introModalOpen) {\n        return null;\n    }\n    \n    return (\n        <div>\n            <Geocoder\n          {...viewport}\n          mapRef={mapRef}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_KEY}\n          containerRef={containerRef}\n          onViewportChange={handleGeocoderViewportChange}\n          onResult={closeLocationModal}\n          onError={(error) => {\n              console.log(error)\n          }}\n          />\n        </div>\n    )\n}\n\nexport default SearchBar\n","import {NavLink} from 'react-router-dom';\nimport './NavBar.css';\n\nconst Navbar = ({ setIntroModalOpen, }) => {\n    return (\n        <header>\n            <nav>\n                <NavLink to=\"/\" exact activeClassName=\"selected\" className=\"item\"><span onClick={() => {\n                    setIntroModalOpen(true);\n                }}>Home</span></NavLink>\n                <NavLink to=\"/Map\" activeClassName=\"selected\" className=\"item\">Map</NavLink>\n                <NavLink to=\"/CustomSearch\" activeClassName=\"selected\" className=\"item\">Custom Search</NavLink>\n            </nav>\n        </header>\n\n        \n    )\n}\n\nexport default Navbar\n","import \"./CustomSearch.css\";\n\nconst CustomSearch = ({ handleSubmit, handleCityChange, handleTermChange, handleNumOfResultsChange }) => {\n\n    \n\n\n    return (\n        <div class=\"page-container\">\n            <div className=\"custom-search-container\">\n                <div className=\"left-container\">\n                    \n                </div>\n                <div className=\"right-container\">\n                    <div className=\"title-container\">\n                        <i class=\"fas fa-search\"></i>\n                        <h1>Custom Search</h1>\n                    </div>\n                    <form onSubmit={handleSubmit} className=\"custom-form\">\n                        <label htmlFor=\"city\" className=\"label-city\">Type In a City</label>\n                        <input placeholder=\"City\" type=\"text\" className=\"input-city\" id=\"city\" name=\"city\" onChange={handleCityChange} />\n                        <label htmlFor=\"category\" className=\"label-category\">Type In a Category</label>\n                        <input placeholder=\"Search Term\" type=\"text\" className=\"input-category\" id=\"category\" name=\"category\" onChange={handleTermChange} />\n                        <label htmlFor=\"numResults\" className=\"label-num-results\">Choose Number of Results:</label>\n                        <select name=\"numResults\" id=\"numResults\" className=\"num-results\" onChange={handleNumOfResultsChange}>\n                            <option value=\"1\">1</option>\n                            <option value=\"5\">5</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"15\">15</option>\n                            <option value=\"20\">20</option>\n                            <option value=\"25\">25</option>\n                            <option value=\"30\">30</option>\n                            <option value=\"35\">35</option>\n                            <option value=\"40\">40</option>\n                            <option value=\"45\">45</option>\n                            <option value=\"50\">50</option>\n                        </select>\n                        <input type=\"submit\" />\n                    </form>\n                </div>\n            </div>\n            \n        </div>\n        \n    )\n}\n\nexport default CustomSearch\n","import Modal from 'react-modal';\n\n\nconst customStyles = {\n    content : {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      height: '90vh',\n      width: '90vw',\n      backgroundColor: 'rgba(255,255,255,0.5',\n      textAlign: 'center'\n    }\n  };\n\n// The following line is for accessiblity per the documentation https://www.npmjs.com/package/react-modal\nModal.setAppElement('#root');\n\nconst ModalElement = ({ isOpen, close, children }) => {\n    \n\n    \n\n    return (\n        <div>\n            <Modal\n                isOpen={isOpen}\n                // onRequestClose={close}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n                >\n              {children}\n            </Modal>\n        </div>\n    )\n}\n\nexport default ModalElement;\n","export default __webpack_public_path__ + \"static/media/TitleLogo.d45b470c.svg\";","export default __webpack_public_path__ + \"static/media/Food-icon-start.59821059.svg\";","export default __webpack_public_path__ + \"static/media/Explore-icon-start.5ada1f98.svg\";","export default __webpack_public_path__ + \"static/media/Event-icon-start.ce5158a9.svg\";","import ModalElement from '../Modal/ModalElement';\nimport titleLogo from '../../SVGs/TitleLogo.svg';\nimport foodLogo from '../../SVGs/Food-icon-start.svg';\nimport exploreLogo from '../../SVGs/Explore-icon-start.svg';\nimport eventLogo from '../../SVGs/Event-icon-start.svg';\nimport {Link} from 'react-router-dom';\nimport \"./Modal.css\";\n\n// These categories are the only ones that will return with the yelp api\nconst exploreCategories = \"axethrowing,beachvolleyball,beaches,bungeejumping,climbing,escapegames,experiences,hiking,rock_climbing,sailing,skiing,snorkeling,arcades,gardens,outdoormovies,festivals,jazzandblues,artmuseums,wineries,hotsprings,tastingclasses,breweries,coffee,foodtrucks,streetvendors,tea,beertours,localflavor,bars,beergardens\"\n\n\n\nconst IntroModal = ({isOpen, close, openLocationModal, setSearchCategory, setSearchType}) => {\n    \n    return (\n        <div>\n            <ModalElement isOpen={isOpen} close={close}>\n            <div className=\"intro-modal-container\">\n                <h1><img className=\"title-logo\" src={titleLogo} alt=\"App Logo with title that says GetAway\" /></h1>\n                <div className=\"btn-container\">\n                    <Link to=\"/Search\">\n                        <button className=\"start-btn\" onClick={() => {\n                            setSearchType('businesses/search?categories=')\n                            setSearchCategory('food')\n                            close()\n                            openLocationModal()\n                        }}>\n                            <img src={foodLogo} alt=\"Food Icon\" />\n                            <h2>Food</h2>\n                        </button>\n                    </Link>\n                    <Link to=\"/Search\">\n                        <button className=\"start-btn\" onClick={() => {\n                            setSearchType('businesses/search?categories=')\n                            setSearchCategory(exploreCategories);\n                            close();\n                            openLocationModal();\n                        }}>\n                            <img src={exploreLogo} alt=\"Explore Icon\" />\n                            <h2>Explore</h2>\n                        </button>\n                    </Link>\n                    <Link to=\"/Search\">\n                        <button className=\"start-btn\" onClick={() => {\n                            setSearchType('events?')\n                            close();\n                            openLocationModal();\n                        }}>\n                            <img src={eventLogo} alt=\"Event Icon\" />\n                            <h2>Events</h2>\n                        </button>\n                    </Link>\n                </div>\n            </div>\n            </ModalElement>\n        </div>\n    )\n}\n\nexport default IntroModal\n","import ModalElement from './ModalElement';\n\nimport {Link} from 'react-router-dom';\n\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport './Modal.css';\n\n\n\nconst LocationModal = ({ isOpen, close, setIntroModalOpen, getUserLocation, containerRef }) => {\n    \n    return (\n        <div>\n            \n            <ModalElement isOpen={isOpen} close={close}>\n                <div className=\"location-modal-container\">\n                    <h1 className=\"location-h1\">Where Do You Want To Search?</h1>\n                    <div id=\"search-container\" ref={containerRef}></div>\n                    <p className=\"location-or\">Or</p>\n                    <div className=\"location-modal-btn-container\">\n                        <button className=\"search-by-location-btn\" onClick={() => {\n                            close()\n                            getUserLocation()\n                        }}>Current Location</button>\n                        <Link to=\"/\"><button className=\"back-btn\" onClick={() => {\n                            close();\n                            setIntroModalOpen(true);\n                        }}>Back</button></Link>\n                    </div>\n                    \n                </div>\n                \n            </ModalElement>\n            \n        </div>\n    )\n}\n\nexport default LocationModal\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport {useEffect, useState} from 'react';\n\nconst CustomResults = ({ resultData }) => {\n\nconst [searchData, setSearchData] = useState(null);\n\n\nuseEffect(() => {\n    setSearchData(null);\n}, [])\n\nuseEffect(() => {\n    setSearchData(resultData);\n}, [resultData])\n\nconsole.log(searchData);\n\n    if(searchData === null || searchData === undefined) {\n        return (\n            <div className=\"loader\">\n                <h1>Loading...</h1>\n                <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />    \n            </div>\n        )\n    }\n    return (\n        <div className=\"all-results\">\n            <h2 className=\"num-results-display\">Number Of Results: {searchData.businesses.length}</h2>\n            {searchData.businesses.map((result) => {\n                return (\n                    <div className=\"result-container\">\n                        <hr />\n                        <h3 className=\"result-title\">{result.name}</h3>\n                        <div className=\"result-img-container\">\n                            <img className=\"result-img\" src={result.image_url} alt=\"business\" />\n                        </div>\n                        <p className=\"open-status\">We are currently <span className=\"open-span\">{result.is_closed ? \"Closed\" : \"Open\"}</span></p>\n                        <h3 className=\"location\">Location:</h3>\n                        <div className=\"address-div\">\n                            <p>{result.location.address1}</p>\n                            <p>{result.location.city}, {result.location.state}, {result.location.zip_code}</p>\n                        </div>\n                        <a className=\"website-link\" href={result.url} >Visit Website</a>\n                        \n\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default CustomResults\n","import { Route, Switch, useHistory } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport Map from './Components/Map/Map';\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport Navbar from './Components/Navbar/Navbar';\nimport CustomSearch from './Components/CustomSearch/CustomSearch';\nimport IntroModal from './Components/Modal/IntroModal';\nimport LocationModal from './Components/Modal/LocationModal';\nimport CustomResults from './Components/CustomResults/CustomResults';\n\n\n\nexport default function App () {\n  \n  // Map viewport state\n  const [viewport, setViewport] = useState({\n    latitude: 28.5421109,\n    longitude: -81.3790304,\n    zoom: 10\n  })\n\n  const [searchViewport, setSearchViewport] = useState(null);\n\n  // Search Data from Yelp\n  const [searchData, setSearchData] = useState(null);\n  // Search Type\n  const [searchType, setSearchType] = useState('businesses/search?categories=')\n  // Search Category\n  const [searchCategory, setSearchCategory] = useState('');\n  // User Position Coordinates State\n  const [userPosition, setUserPosition] = useState(null);\n\n  const [introModalOpen, setIntroModalOpen] = useState(true);\n  const [locationModalOpen, setLocationModalOpen] = useState(false);\n\n  // Declaring History to use for redirect in popup link\n  const history = useHistory();\n\n  // State For Custom Search\n  const [city, setCity] = useState(null);\n  const [searchTerm, setsearchTerm] = useState(null);\n  const [numOfResults, setNumOfResults] = useState(1);\n  const [resultData, setResultData] = useState(null);\n\n  // Functions for Custom Search\n  const handleCityChange = (event) => {\n      setCity(event.target.value);\n  }\n\n  const handleTermChange = (event) => {\n      setsearchTerm(event.target.value);\n  }\n\n  const handleNumOfResultsChange = (event) => {\n      setNumOfResults(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n      event.preventDefault();\n      console.log(city, searchTerm, numOfResults);\n      getCustomSearch();\n      history.push('/SearchResults');\n  }\n\n  const customSearchParams = {\n      baseUrl: 'https://project2-proxy.herokuapp.com/https://api.yelp.com/v3/businesses/search?',\n      apiKey: process.env.REACT_APP_YELP_KEY,\n        \n    }\n\n  const getCustomSearch = async () => {\n      try {\n        const response = await fetch(`${customSearchParams.baseUrl}term=${searchTerm}&location=${city}&limit=${numOfResults}`, {\n          \"method\": \"GET\",\n          \"headers\": {\n            \"Authorization\": `Bearer ${customSearchParams.apiKey}`\n          }\n        });\n        const data = await response.json();\n        setResultData(data);\n      } catch(err) {\n        console.log(err);\n      }\n    }\n\n\n\n  // This function redirects user after clicking the see more details in the popup\n  const handleMapDetailClick = () => {\n    history.push('/SearchResults')\n  }\n\n  \n  \n  // Modal Functions\n\n  const closeLocationModal = () => {\n    setLocationModalOpen(false);\n  }\n\n  const closeIntroModal = () => {\n    setIntroModalOpen(false);\n  }\n\n\n\n  const openLocationModal = () => {\n    setLocationModalOpen(true);\n  }\n\n  \n\n  // Ref for Map\n  const mapRef = useRef();\n  // Ref for search container\n  const containerRef = useRef(null);\n\n  // Seting userposition state\n  const setUserLocation = (pos) => {\n    const crd = pos.coords;\n    setUserPosition({latitude: crd.latitude, longitude: crd.longitude})\n    setViewport({latitude: crd.latitude, longitude: crd.longitude, width: '100vw', height: '95vh', zoom: 12})\n    \n  }\n  // Function to get user location from the browser\n  const getUserLocation = () => {\n    navigator.geolocation.getCurrentPosition(setUserLocation)\n  }\n  \n  // Search Parameters for Map search\n  const searchParams = {\n    baseUrl: 'https://project2-proxy.herokuapp.com/https://api.yelp.com/v3/',\n    apiKey: process.env.REACT_APP_YELP_KEY,\n    \n  }\n\n  const getDetailsByLocation = async (param) => {\n    if(param === null) {\n      return\n    }\n    try {\n      const response = await fetch(`${searchParams.baseUrl}${searchType}${searchCategory}&latitude=${param.latitude}&longitude=${param.longitude}&limit=50`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"Authorization\": `Bearer ${searchParams.apiKey}`\n        }\n      });\n      const data = await response.json();\n      setSearchData(data);\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  \n\n\n\n  \n  useEffect(() => {\n    getDetailsByLocation(userPosition);\n  }, [userPosition]);\n\n  useEffect(() => {\n    getDetailsByLocation(searchViewport);\n  }, [searchViewport])\n\n\n\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <Navbar></Navbar>\n          <IntroModal isOpen={introModalOpen} close={closeIntroModal} openLocationModal={openLocationModal} setSearchCategory={setSearchCategory} setSearchType={setSearchType}></IntroModal>\n          <Map viewport={viewport} setViewport={setViewport} introModalOpen={introModalOpen}></Map>\n        </Route>\n        <Route exact path=\"/Search\">\n          <Navbar setIntroModalOpen={setIntroModalOpen} ></Navbar>\n          <Map searchData={searchData} viewport={viewport} setViewport={setViewport} mapRef={mapRef} searchType={searchType} searchCategory={searchCategory} introModalOpen={introModalOpen} locationModalOpen={locationModalOpen} setResultData={setResultData} handleMapDetailClick={handleMapDetailClick}>\n            <SearchBar setViewport={setViewport} viewport={viewport} setSearchViewport={setSearchViewport} mapRef={mapRef} containerRef={containerRef} closeLocationModal={closeLocationModal} introModalOpen={introModalOpen}></SearchBar>\n          </Map>\n          <LocationModal isOpen={locationModalOpen} close={closeLocationModal} setIntroModalOpen={setIntroModalOpen} getUserLocation={getUserLocation} containerRef={containerRef}></LocationModal>\n        </Route>\n        <Route path=\"/Map\">\n          <Navbar setIntroModalOpen={setIntroModalOpen}></Navbar>\n          <Map viewport={viewport} setViewport={setViewport} mapRef={mapRef} handleMapDetailClick={handleMapDetailClick}>\n            <SearchBar setViewport={setViewport} viewport={viewport} setSearchViewport={setSearchViewport} mapRef={mapRef} setResultData={setResultData}></SearchBar>\n          </Map>\n        </Route>\n        <Route path=\"/CustomSearch\">\n          <Navbar setIntroModalOpen={setIntroModalOpen}></Navbar>\n          <CustomSearch handleSubmit={handleSubmit} handleCityChange={handleCityChange} handleTermChange={handleTermChange} handleNumOfResultsChange={handleNumOfResultsChange}></CustomSearch>\n        </Route>\n        <Route path=\"/SearchResults\">\n          <Navbar setIntroModalOpen={setIntroModalOpen}></Navbar>\n          <CustomResults resultData={resultData}></CustomResults>\n        </Route>\n      </Switch>\n    </div>\n    \n  )\n}\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}